<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mytopia</title>
    <link>http://tangzhongham.github.io/</link>
    <description>Recent content on Mytopia</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 18 Nov 2019 23:20:43 +0800</lastBuildDate>
    
	<atom:link href="http://tangzhongham.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mac</title>
      <link>http://tangzhongham.github.io/awesome/mac/</link>
      <pubDate>Sun, 05 Jul 2020 01:27:52 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/awesome/mac/</guid>
      <description>My Awesome Mac CheatSheet 1440 hidden bar Pocket cmd + s 直接保存 Chrome option + cmd + arrow tab 左右移动 shift + t 所有tab 搜索 （vim 插件 窗口 Magnet ctrl + option + arrow 左右半边 ctrl + option + u/i/jk 四分之一边 ctrl + option + d/f/g 三</description>
    </item>
    
    <item>
      <title>Me</title>
      <link>http://tangzhongham.github.io/java/me/</link>
      <pubDate>Thu, 02 Jul 2020 19:05:57 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/me/</guid>
      <description>the Way to become a Computer Scientist 记录自己成为一名计算机科学家的成长之路. 20200702: 第一次编译IDEA运行一个商业项目. yeah~~ 才发现自己把mac 搞坏了&amp;hellip;可能还</description>
    </item>
    
    <item>
      <title>Java学习 JVM</title>
      <link>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-jvm/</link>
      <pubDate>Mon, 29 Jun 2020 18:17:42 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-jvm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java学习 并发</title>
      <link>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Mon, 29 Jun 2020 18:16:04 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-%E5%B9%B6%E5%8F%91/</guid>
      <description>Java 并发 记录在各个地方学到的小知识, 起常看常新和弥补作用 并发知识索引: 什么是线程, 线程的状态, 线程可以干嘛, 为了解决线程干嘛带来的新问题的解决</description>
    </item>
    
    <item>
      <title>Java学习 容器</title>
      <link>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Mon, 29 Jun 2020 18:15:54 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-%E5%AE%B9%E5%99%A8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java学习 基础</title>
      <link>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 29 Jun 2020 18:15:39 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/java%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JVM原理入门</title>
      <link>http://tangzhongham.github.io/java/jvm%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 08 Jun 2020 17:04:51 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/jvm%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8/</guid>
      <description>JVM原理入门 tzh 2020/05/19./ JVM原理入门 Why JVM Why Java Java、JDK、JRE JVM 概论 什么是 JVM JVM 概览 前端编译/Class 文件 Class 文件结构 后端编译 虚拟机类加载机</description>
    </item>
    
    <item>
      <title>JVM工具使用</title>
      <link>http://tangzhongham.github.io/java/jvm%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 08 Jun 2020 17:04:06 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/jvm%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>Java 基础运维工具使用 jps JVM Process Status Tool, 用于列出正在运行的虚拟机进程. 用于查看pod 内是否存在进程挂掉/验证是否手动添加JVM参数。 inceptor/slipstream 可以配合 grep 查询虚拟</description>
    </item>
    
    <item>
      <title>Flink源码阅读之任务提交流程</title>
      <link>http://tangzhongham.github.io/flink/flink%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E4%BB%BB%E5%8A%A1%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 08 Jun 2020 16:59:22 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/flink/flink%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E4%BB%BB%E5%8A%A1%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B/</guid>
      <description>Flink 源码阅读之任务提交基本流程 org.apache.flink.runtime.blob.BlobServer#run java.net.ServerSocket#accept BlobServer.run 涉及的类: org.apache.flink.client.cli.CliFrontend org.apache.flink.client.ClientUtils org.apache.flink.streaming.examples.wordcount.WordCount org.apache.flink.runtime.blob.BlobServer#run org.apache.flink.runtime.taskexecutor.TaskExecutor#submitTask org.apache.flink.runtime.deployment.TaskDeploymentDescriptor 流程准备 以远程调试模式运行 org.apache.flink.client.cli.CliFrontend org.apache.flink.runtime.entrypoint.StandaloneSessionClusterEntrypoint org.apache.flink.runtime.taskexecutor.TaskManagerRunner 使用 ./flink 提交 WordCount.jar, 查看整个任务的流转过程 org.apache.flink.client.program.PackagedProgram#callMainMethod java.lang.reflect.Method#invoke org.apache.flink.streaming.api.environment.StreamContextEnvironment#execute org.apache.flink.streaming.api.graph.StreamGraphGenerator#generate org.apache.flink.streaming.api.graph.StreamGraphGenerator#transform org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#executeAsync(org.apache.flink.streaming.api.graph.StreamGraph) org.apache.flink.core.execution.JobListener#onJobSubmitted org.apache.flink.client.program.rest.RestClusterClient#submitJob JM</description>
    </item>
    
    <item>
      <title>Flink源码阅读之启动流程</title>
      <link>http://tangzhongham.github.io/flink/flink%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 08 Jun 2020 16:57:43 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/flink/flink%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
      <description>Flink源码阅读之启动流程 本文分析了 Flink standalone/yarn 的启动流程 先看启动脚本 start-cluster.sh ## 读取默认 config 配置文件 . &amp;#34;$bin&amp;#34;/config.sh # Start the JobManager instance(s) ## 用来定制 shell 环境 -s 开启某个选项 nocasematch 忽略大小</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>http://tangzhongham.github.io/scala/intro/</link>
      <pubDate>Mon, 01 Jun 2020 17:03:48 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/scala/intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>http://tangzhongham.github.io/java/intro/</link>
      <pubDate>Mon, 01 Jun 2020 17:03:41 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/java/intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>http://tangzhongham.github.io/flink/intro/</link>
      <pubDate>Mon, 01 Jun 2020 17:03:23 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/flink/intro/</guid>
      <description> haha </description>
    </item>
    
    <item>
      <title>Kafka源码阅读之ServerSocketChannel</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bserversocketchannel/</link>
      <pubDate>Fri, 08 May 2020 17:02:23 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bserversocketchannel/</guid>
      <description>kafka源码解析之 ServerSocketChannel 详解 由于kafka socketServer 使用到了 nio 的 serverSocketChannel, 本文详细解析了 该类的使用方法。 https://blog.csdn.net/kavu1/article/details/53212178 Kafka 的 kafka.network.Acceptor 负责监听外界 Socket 连接并把请求转发给 kafka.n</description>
    </item>
    
    <item>
      <title>Kafka源码阅读之性能篇</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E6%80%A7%E8%83%BD%E7%AF%87/</link>
      <pubDate>Fri, 08 May 2020 17:01:30 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E6%80%A7%E8%83%BD%E7%AF%87/</guid>
      <description>kafka源码解析之性能篇 概念篇 Linux 的 Page Cache 和 Buffer Cache page cache是系统读写磁盘文件时为了提高性能而将一部分文件缓存到内存中。 这种做法虽然提高了磁盘</description>
    </item>
    
    <item>
      <title>Kafka源码阅读之socketServer原理篇</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bsocketserver%E5%8E%9F%E7%90%86%E7%AF%87/</link>
      <pubDate>Fri, 08 May 2020 12:00:33 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bsocketserver%E5%8E%9F%E7%90%86%E7%AF%87/</guid>
      <description>Kafka 源码解析之 socketServer 原理篇 Kafka 是如何做到百万级高并发低延迟的? 原理 有别于传统的 thread per connection 模型, Kafka 使用基于 NIO 实现的 Reactor 模型. Kafka 使用 nio 实现了自己的 socketServer 网络层代码</description>
    </item>
    
    <item>
      <title>Kafka源码阅读之broker启动</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bbroker%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Fri, 17 Apr 2020 17:44:51 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bbroker%E5%90%AF%E5%8A%A8/</guid>
      <description>Kafka 源码解析之 broker启动 基于 kafka 2.3.0 C:/kafka created on 0327 modified on 0410 学习了 scala 之后我又来了 Kafka 启动脚本分析 Kafka 核心主类 kafka.Kafka 由于作者的 java 知识相对薄弱，源码注解可能做的比</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>http://tangzhongham.github.io/kafka/intro/</link>
      <pubDate>Fri, 17 Apr 2020 17:03:34 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/intro/</guid>
      <description>Kafka 源码阅读 这里是一些kafka源码阅读笔记</description>
    </item>
    
    <item>
      <title>How_to_hugo日常使用篇</title>
      <link>http://tangzhongham.github.io/intro/how_to_hugo%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E7%AF%87/</link>
      <pubDate>Sat, 15 Feb 2020 14:34:05 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/intro/how_to_hugo%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E7%AF%87/</guid>
      <description>How to hugo 日常使用篇 本篇介绍如何发布一篇文章并编写shell脚本快捷发布/ How to hugo 日常使用篇 本地撰写博文 发布 shell 脚本自动发布 TODO Ref 本篇文章介绍如何发布</description>
    </item>
    
    <item>
      <title>How_to_hugo安装篇</title>
      <link>http://tangzhongham.github.io/intro/how_to_hugo%E5%AE%89%E8%A3%85%E7%AF%87/</link>
      <pubDate>Fri, 14 Feb 2020 14:33:55 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/intro/how_to_hugo%E5%AE%89%E8%A3%85%E7%AF%87/</guid>
      <description>How to hugo 安装篇 本篇介绍如何安装 hugo 并将 blog 部署到 github pages.</description>
    </item>
    
    <item>
      <title>New_intro</title>
      <link>http://tangzhongham.github.io/posts/new_intro/</link>
      <pubDate>Thu, 13 Feb 2020 18:24:45 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/posts/new_intro/</guid>
      <description>hugo 日志操作流程 [toc] 本篇文章介绍如何发布一篇文章并上传到网页端. 一共只有两个步骤 本地撰写博文 cd ./mytopia hugo server -D // 此时开启的是fast render 模式, 会热更新你的</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tangzhongham.github.io/about/</link>
      <pubDate>Tue, 31 Dec 2019 17:04:51 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/about/</guid>
      <description>Hello! 有问题欢迎交流! 微信: tzh-1166 邮箱: 13122260573@163.com</description>
    </item>
    
    <item>
      <title>How_to_hugo</title>
      <link>http://tangzhongham.github.io/intro/how_to_hugo/</link>
      <pubDate>Sat, 23 Nov 2019 17:48:40 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/intro/how_to_hugo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>201911</title>
      <link>http://tangzhongham.github.io/diary/201911/</link>
      <pubDate>Tue, 19 Nov 2019 22:31:48 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/diary/201911/</guid>
      <description>2019 年 11 月 2019 年 11 月 1119 - 1126 11 19 周二 Thoughts TODO LIST This is for PRIVATE ONLY !!! 1119 - 1126 11 19 周二 Thoughts 今天终于把页面部署好了~ 然后可以舒舒服服的发布,然后在哪里都能看啦. TODO LIST deploy 脚</description>
    </item>
    
    <item>
      <title>How_to_github_pages</title>
      <link>http://tangzhongham.github.io/intro/how_to_github_pages/</link>
      <pubDate>Tue, 19 Nov 2019 13:10:03 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/intro/how_to_github_pages/</guid>
      <description>How to deploy your hugo sites to Github Pages How to deploy your hugo sites to Github Pages 部署到 Github 个人页面 常见错误 TODO LIST 部署到 Github 个人页面 在github 分别建立 mytopia 和 &amp;lt;username&amp;gt;.github.io 的仓库，前者用来存放网页的源文件</description>
    </item>
    
    <item>
      <title>How_to_hugo_1</title>
      <link>http://tangzhongham.github.io/intro/how_to_hugo_1/</link>
      <pubDate>Tue, 19 Nov 2019 11:23:09 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/intro/how_to_hugo_1/</guid>
      <description>How to Hugo [toc] 安装篇 Git 安装 略 Hugo 安装 Windows 下载二进制文件: Windows 安装其实要比 Mac 舒服一些.找到 binary 二进制文件 的Releases, 下载下来安装就行. 下载链接 添加到</description>
    </item>
    
    <item>
      <title>How_to_hugo</title>
      <link>http://tangzhongham.github.io/posts/how_to_hugo/</link>
      <pubDate>Mon, 18 Nov 2019 22:13:51 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/posts/how_to_hugo/</guid>
      <description>1. Markdown 5分钟使用指南 注意: 该主题的toc渲染有点问题,不支持1.1.1 这种表达(和 visual studio code 里面冲突) 1. Markdown 5分钟使用指南 1.1. Why Markdown How to Markdown 1.2.1. 结构 1.2.2. 段落 1.2.2.1.</description>
    </item>
    
    <item>
      <title>How_to_markdown</title>
      <link>http://tangzhongham.github.io/posts/how_to_markdown/</link>
      <pubDate>Mon, 18 Nov 2019 22:13:43 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/posts/how_to_markdown/</guid>
      <description>Markdown 5分钟使用指南 Markdown 5分钟使用指南 Why Markdown How to Markdown 结构 段落 分隔符 引用 代码块 单行代码 多行代码 句子 换行 Bullet Dot 文本 链接 Others 杂 Why Markdown Markdown is a lightweight markup language that you can use to add formatting elements to</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tangzhongham.github.io/page/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tangzhongham.github.io/page/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>