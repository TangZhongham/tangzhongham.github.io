<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kafkas on Mytopia</title>
    <link>http://tangzhongham.github.io/kafka/</link>
    <description>Recent content in Kafkas on Mytopia</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 08 May 2020 17:02:23 +0800</lastBuildDate>
    
	<atom:link href="http://tangzhongham.github.io/kafka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka源码阅读之ServerSocketChannel</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bserversocketchannel/</link>
      <pubDate>Fri, 08 May 2020 17:02:23 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bserversocketchannel/</guid>
      <description>kafka源码解析之 ServerSocketChannel 详解 由于kafka socketServer 使用到了 nio 的 serverSocketChannel, 本文详细解析了 该类的使用方法。 https://blog.csdn.net/kavu1/article/details/53212178 Kafka 的 kafka.network.Acceptor 负责监听外界 Socket 连接并把请求转发给 kafka.n</description>
    </item>
    
    <item>
      <title>Kafka源码阅读之性能篇</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E6%80%A7%E8%83%BD%E7%AF%87/</link>
      <pubDate>Fri, 08 May 2020 17:01:30 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8B%E6%80%A7%E8%83%BD%E7%AF%87/</guid>
      <description>kafka源码解析之性能篇 概念篇 Linux 的 Page Cache 和 Buffer Cache page cache是系统读写磁盘文件时为了提高性能而将一部分文件缓存到内存中。 这种做法虽然提高了磁盘</description>
    </item>
    
    <item>
      <title>Kafka源码阅读之socketServer原理篇</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bsocketserver%E5%8E%9F%E7%90%86%E7%AF%87/</link>
      <pubDate>Fri, 08 May 2020 12:00:33 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bsocketserver%E5%8E%9F%E7%90%86%E7%AF%87/</guid>
      <description>Kafka 源码解析之 socketServer 原理篇 Kafka 是如何做到百万级高并发低延迟的? 原理 有别于传统的 thread per connection 模型, Kafka 使用基于 NIO 实现的 Reactor 模型. Kafka 使用 nio 实现了自己的 socketServer 网络层代码</description>
    </item>
    
    <item>
      <title>Kafka源码阅读之broker启动</title>
      <link>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bbroker%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Fri, 17 Apr 2020 17:44:51 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/kafka%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B9%8Bbroker%E5%90%AF%E5%8A%A8/</guid>
      <description>Kafka 源码解析之 broker启动 基于 kafka 2.3.0 C:/kafka created on 0327 modified on 0410 学习了 scala 之后我又来了 Kafka 启动脚本分析 Kafka 核心主类 kafka.Kafka 由于作者的 java 知识相对薄弱，源码注解可能做的比</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>http://tangzhongham.github.io/kafka/intro/</link>
      <pubDate>Fri, 17 Apr 2020 17:03:34 +0800</pubDate>
      
      <guid>http://tangzhongham.github.io/kafka/intro/</guid>
      <description>Kafka 源码阅读 这里是一些kafka源码阅读笔记</description>
    </item>
    
  </channel>
</rss>